"""rename tables low register

Revision ID: 35b0d0661487
Revises: 6dfec37e8313
Create Date: 2025-02-27 19:00:42.492467

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "35b0d0661487"
down_revision: Union[str, None] = "6dfec37e8313"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "hotels",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("hashed_password", sa.String(length=200), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "rooms",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("hotel_id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=100), nullable=True),
        sa.ForeignKeyConstraint(
            ["hotel_id"],
            ["hotels.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "bookings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("room_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("date_from", sa.Date(), nullable=False),
        sa.Column("date_to", sa.Date(), nullable=False),
        sa.Column("price", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["room_id"],
            ["rooms.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("Bookings")
    op.drop_table("Rooms")
    op.drop_table("Hotels")
    op.drop_table("Users")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Users",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('\"Users_id_seq\"'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column(
            "hashed_password",
            sa.VARCHAR(length=200),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="Users_pkey"),
        sa.UniqueConstraint("email", name="Users_email_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "Hotels",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('\"Hotels_id_seq\"'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("title", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("location", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="Hotels_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "Rooms",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('\"Rooms_id_seq\"'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("hotel_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("price", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("quantity", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "description", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["hotel_id"], ["Hotels.id"], name="Rooms_hotel_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="Rooms_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "Bookings",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("room_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("date_from", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("date_to", sa.DATE(), autoincrement=False, nullable=False),
        sa.Column("price", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["room_id"], ["Rooms.id"], name="Bookings_room_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["Users.id"], name="Bookings_user_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="Bookings_pkey"),
    )
    op.drop_table("bookings")
    op.drop_table("rooms")
    op.drop_table("users")
    op.drop_table("hotels")
    # ### end Alembic commands ###
